<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.korit.korit_gpt_java_springboot.mapper.post.PostLikeMapper">
    <resultMap id="likeCountResultMap" type="com.korit.korit_gpt_java_springboot.entity.post.PostLike">
        <result property="postId" column="post_id"/>
        <result property="likeCount" column="like_count"/>
    </resultMap>

<!--    좋아요-->
    <insert id="insert">
        insert into post_like_tb
        select
            iv.post_like_id,
            iv.post_id,
            iv.user_id,
            iv.create_at,
        from
            (select
                0 as post_like_id,
                #{postId} as post_id,
                #{userId} as user_id,
                now() as create_at
            ) iv
            left outer join post_like_tb plt on(plt.post_id = iv.post_id ans plt.user_id = iv.user_id)
        where
            plt.post_like_id is null
    </insert>

<!--    좋아요 취소-->
    <delete id="deleteByPostIdAndUserId">
        delete
        from
            post_like_tb
        where
            post_id = #{postId}
            and user_id = #{userId}
    </delete>

<!--    좋아요 갯수 by postId-->
    <select id="selectLikeCountByPostId" resultType="java.lang.Integer">
        select
            post_id,
            count(post_id) as like_count
        from
            post_like_tb
        where
            post_id = #{postId}
        group by
            post_id
    </select>

<!--    좋아요 갯수 전체 게시글-->
    <select id="selectLikeCountAll" resultMap="likeCountResultMap">
        select
            post_id,
            count(post_id) as like_count
        from
            post_like_tb
        group by
            post_id
    </select>

</mapper>