<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.korit.springboot_security.mapper.user.UserMapper">
    <resultMap id="userResultMap" type="com.korit.springboot_security.entity.user.User">
        <id property="userId" column="user_id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <result property="isAccountNonExpired" column="account_expired" />
        <result property="isAccountNonLocked" column="account_locked" />
        <result property="isCredentialsNonExpired" column="credentials_expired" />
        <result property="isEnabled" column="account_enabled" />
        <collection property="userRoles" resultMap="userRoleResultMap"/>
    </resultMap>

    <resultMap id="userRoleResultMap" type="com.korit.springboot_security.entity.user.UserRole">
        <id property="userRoleId" column="user_role_id"/>
        <result property="userId" column="user_id"/>
        <result property="roleId" column="role_id"/>
        <association property="role" resultMap="roleResultMap"/>
    </resultMap>

    <resultMap id="roleResultMap" type="com.korit.springboot_security.entity.user.Role">
        <id property="roleId" column="role_id"/>
        <result property="roleName" column="role_name"/>
    </resultMap>

    <!--    사용자 추가-->
    <insert id="insert" keyProperty="userId" useGeneratedKeys="true">
        insert into user_tb
        values(default, #{username}, #{password}, #{name}, #{email}, 1, 1, 1, 1)
    </insert>

    <!--    사용자 수정-->
    <update id="updateUserById">
        update user_tb
        set
        email = #{email}
        where
        user_id = #{userId}
    </update>

    <!--    사용자 삭제-->
    <delete id="deleteById">
        delete
        from
        user_tb
        where
        user_id = #{userId}
    </delete>

    <!--    사용자 단건 조회 by username-->
    <select id="selectByUsername" resultMap="userResultMap">
        select
            ut.user_id,
            ut.username,
            ut.password,
            ut.name,
            ut.email,
            ut.account_expired,
            ut.account_locked,
            ut.credentials_expired,
            ut.account_enabled,

            urt.user_role_id,
            urt.user_id,
            urt.role_id,

            rt.role_id,
            rt.role_name
        from
            user_tb ut
            left outer join user_role_tb urt on(urt.user_id = ut.user_id)
            left outer join role_tb rt on(rt.role_id = urt.role_id)
        where
            ut.username = #{username}
    </select>

    <!--    사용자 단건 조회 by userId-->
    <select id="selectById" resultMap="userResultMap">
        select
            ut.user_id,
            ut.username,
            ut.password,
            ut.name,
            ut.email,
            ut.account_expired,
            ut.account_locked,
            ut.credentials_expired,
            ut.account_enabled,

            urt.user_role_id,
            urt.user_id,
            urt.role_id,

            rt.role_id,
            rt.role_name
        from
            user_tb ut
            left outer join user_role_tb urt on(urt.user_id = ut.user_id)
            left outer join role_tb rt on(rt.role_id = urt.role_id)
        where
            ut.user_id = #{userId}
    </select>

<!--    사용자 전체 조회-->
    <select id="selectAllUsers" resultMap="userResultMap">
        select
            ut.user_id,
            ut.username,
            ut.password,
            ut.name,
            ut.email,
            ut.account_expired,
            ut.account_locked,
            ut.credentials_expired,
            ut.account_enabled,

            urt.user_role_id,
            urt.user_id,
            urt.role_id,

            rt.role_id,
            rt.role_name
        from
            user_tb ut
            left outer join user_role_tb urt on(urt.user_id = ut.user_id)
            left outer join role_tb rt on(rt.role_id = urt.role_id)
    </select>

</mapper>